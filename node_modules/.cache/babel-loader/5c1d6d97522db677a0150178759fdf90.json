{"ast":null,"code":"var _jsxFileName = \"/Users/johntan/Desktop/slideshow_app/4839d52f-4670-4cd1-b7fd-c356bc1ebaec/src/components/Slides.js\";\nimport React, { useState } from 'react';\n\nfunction Slides({\n  slides\n}) {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [currentSlide, setCurrentSlide] = useState(slides[0]);\n  const [disabledPrev, setDisabledPrev] = useState(true);\n  const [disabledNext, setDisabledNext] = useState(false);\n  const [disabledRestart, setDisabledRestart] = useState(true);\n\n  const onClickNext = () => {\n    var currSlideIndex = activeIndex;\n\n    if (currSlideIndex < slides.length - 1) {\n      currSlideIndex++;\n      setActiveIndex(currSlideIndex);\n      setCurrentSlide(slides[currSlideIndex]);\n      setDisabledPrev(false);\n      setDisabledRestart(false);\n    }\n  };\n\n  const onClickPrev = () => {\n    var currSlideIndex = activeIndex;\n\n    if (currSlideIndex > 0) {\n      currSlideIndex--;\n      setActiveIndex(currSlideIndex);\n      setCurrentSlide(slides[currSlideIndex]);\n      setDisabledNext(false);\n    }\n\n    if (currSlideIndex == 0) {\n      setDisabledPrev(true);\n    }\n  };\n\n  const onClickRestart = () => {\n    setActiveIndex(0);\n    setCurrentSlide(slides[0]);\n    setDisabledPrev(true);\n    setDisabledRestart(true);\n    setDisabledNext(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"navigation\",\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    \"data-testid\": \"button-restart\",\n    className: \"small outlined\",\n    onClick: () => onClickRestart(),\n    disabled: disabledRestart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, \"Restart\"), /*#__PURE__*/React.createElement(\"button\", {\n    \"data-testid\": \"button-prev\",\n    className: \"small\",\n    onClick: () => onClickPrev(),\n    disabled: disabledPrev,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"Prev\"), /*#__PURE__*/React.createElement(\"button\", {\n    \"data-testid\": \"button-next\",\n    className: \"small\",\n    onClick: () => onClickNext(),\n    disabled: disabledNext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"Next\")), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"slide\",\n    className: \"card text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    \"data-testid\": \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, currentSlide.title), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, currentSlide.text)));\n}\n\nexport default Slides;","map":{"version":3,"sources":["/Users/johntan/Desktop/slideshow_app/4839d52f-4670-4cd1-b7fd-c356bc1ebaec/src/components/Slides.js"],"names":["React","useState","Slides","slides","activeIndex","setActiveIndex","currentSlide","setCurrentSlide","disabledPrev","setDisabledPrev","disabledNext","setDisabledNext","disabledRestart","setDisabledRestart","onClickNext","currSlideIndex","length","onClickPrev","onClickRestart","title","text"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nfunction Slides({slides}) {\n\n    const [activeIndex, setActiveIndex] = useState(0);\n    const [currentSlide, setCurrentSlide] = useState(slides[0]);\n    const [disabledPrev, setDisabledPrev] = useState(true);\n    const [disabledNext, setDisabledNext] = useState(false);\n    const [disabledRestart, setDisabledRestart] = useState(true);\n\n\n    const onClickNext = () => {\n        var currSlideIndex = activeIndex;\n\n        if(currSlideIndex < slides.length - 1){\n            currSlideIndex++;\n            setActiveIndex(currSlideIndex);\n            setCurrentSlide(slides[currSlideIndex]);\n            setDisabledPrev(false);\n            setDisabledRestart(false);\n        }\n    }\n\n    const onClickPrev = () => {\n        var currSlideIndex = activeIndex;\n\n        if (currSlideIndex > 0){\n            currSlideIndex--;\n            setActiveIndex(currSlideIndex);\n            setCurrentSlide(slides[currSlideIndex]);\n            setDisabledNext(false);\n        }\n        if(currSlideIndex == 0){\n            setDisabledPrev(true);\n        }\n    }\n\n    const onClickRestart = () => {\n        setActiveIndex(0);\n        setCurrentSlide(slides[0]);\n        setDisabledPrev(true);\n        setDisabledRestart(true);\n        setDisabledNext(false);\n    }\n\n\n    return (\n        <div>\n            <div id=\"navigation\" className=\"text-center\">\n                <button data-testid=\"button-restart\" className=\"small outlined\" onClick={() => onClickRestart()} disabled={disabledRestart}>Restart</button>\n                <button data-testid=\"button-prev\" className=\"small\" onClick={() => onClickPrev()} disabled={disabledPrev}>Prev</button>\n                <button data-testid=\"button-next\" className=\"small\" onClick={() => onClickNext()} disabled={disabledNext}>Next</button>\n            </div>\n            <div id=\"slide\" className=\"card text-center\">\n                <h1 data-testid=\"title\">{currentSlide.title}</h1>\n                <p data-testid=\"text\">{currentSlide.text}</p>\n            </div>\n        </div>\n    );\n\n}\n\nexport default Slides;\n"]},"metadata":{},"sourceType":"module"}